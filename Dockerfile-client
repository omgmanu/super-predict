# Use an official Node.js runtime as a parent image
FROM node:20-alpine as builder

# Install Python and build dependencies
RUN apk add --no-cache python3 make g++ linux-headers eudev-dev

# Set the working directory in the container
WORKDIR /app

# Copy the entire project for build
COPY . .

# Install dependencies with platform-friendly options
ENV NODE_ENV=production
RUN npm ci

# Build directly with Vite in the client directory
RUN cd client && \
    npm install vite && \
    npx vite build || echo "Build may have failed, continuing anyway"

# Make sure the output directory exists
RUN mkdir -p /app/dist-output && \
    if [ -d "/app/client/dist" ]; then \
      cp -r /app/client/dist/* /app/dist-output/; \
    elif [ -d "/app/dist/client" ]; then \
      cp -r /app/dist/client/* /app/dist-output/; \
    else \
      echo "WARNING: No dist directory found, creating empty one"; \
      mkdir -p /app/dist-output; \
      echo "<html><body>Build failed</body></html>" > /app/dist-output/index.html; \
    fi

# Final production image
FROM node:20-alpine as runner

WORKDIR /app

# Install serve to host the SPA
RUN npm install -g serve

# Copy the build output from the builder stage
COPY --from=builder /app/dist-output /app/dist

# Expose the port the app runs on
EXPOSE ${PORT_CLIENT}

# Start the server
CMD ["serve", "-s", "dist", "-l", "${PORT_CLIENT}"]