FROM node:20-alpine AS base

RUN apk add --no-cache curl

FROM base AS builder

# Add necessary build dependencies
RUN apk add --no-cache gcompat python3 make g++ linux-headers eudev-dev
WORKDIR /app

COPY dist/api .
RUN npm install
# RUN npm run build

# COPY api/package*.json api/tsconfig.json ./
# COPY api/src ./src

# # This command:
# # 1. Installs all dependencies (npm ci)
# # 2. Builds the TypeScript code (npm run build) 
# # 3. Removes dev dependencies to reduce image size (npm prune --production)
# # RUN npm ci && \
# #     npm run build && \
# #     npm prune --production

# RUN npm install
# RUN npm run build

# FROM base AS runner
# WORKDIR /app

# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 hono

# COPY --from=builder --chown=hono:nodejs /app/node_modules /app/node_modules
# COPY --from=builder --chown=hono:nodejs /app/dist /app/dist
# COPY --from=builder --chown=hono:nodejs /app/package.json /app/package.json

# USER hono
EXPOSE ${PORT_API}

# CMD ["node", "/app/dist/index.js"]